name: publish_gui_windows-2019

on:
  push:
    branches: [ main ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  COMPILE_VERSION : '"Visual Studio 16 2019"' #Because cmake -G needs " "
  WX_ROOT : ${{github.workspace}}/wx
  GLUT_ROOT : ${{github.workspace}}/freeglut #name of the first folder in freeglut archive
  
jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
    
    # https://gist.github.com/dansmith65/7dd950f183af5f5deaf9650f2ad3226c
    - name: Install 7Zip
      run: |
        $dlurl = 'https://7-zip.org/' + (Invoke-WebRequest -UseBasicParsing -Uri 'https://7-zip.org/' | Select-Object -ExpandProperty Links | Where-Object {($_.outerHTML -match 'Download')-and ($_.href -like "a/*") -and ($_.href -like "*-x64.exe")} | Select-Object -First 1 | Select-Object -ExpandProperty href)
        # modified to work without IE
        # above code from: https://perplexity.nl/windows-powershell/installing-or-updating-7-zip-using-powershell/
        $installerPath = Join-Path $env:TEMP (Split-Path $dlurl -Leaf)
        Invoke-WebRequest $dlurl -OutFile $installerPath
        Start-Process -FilePath $installerPath -Args "/S" -Verb RunAs -Wait
        Remove-Item $installerPath

    # DO NOT Download freeglut 3.0.0 MSVC Package. It is buggy for glutWireCube, glutSolid* !!!
    # Keep freeglut 2.8.1
    - name: Install Freeglut dependency
      run: |
        Invoke-WebRequest https://www.transmissionzero.co.uk/files/software/development/GLUT/older/freeglut-MSVC-2.8.1-1.mp.zip -OutFile freeglut.zip
        Expand-Archive freeglut.zip -DestinationPath ${{ env.GLUT_ROOT }} # create freeglut directory

    # Use first version of wxWidgets supporting vc 14.3
    # Binaries are here: https://www.wxwidgets.org/downloads/
    - name: Install wxWidgets dependency
      run: |
        set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxWidgets-3.2.2.1-headers.7z -OutFile wxHeaders.7z
        sz x wxHeaders.7z -o${{ env.WX_ROOT }} # create include directory
        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxMSW-3.2.2_vc14x_x64_Dev.7z -OutFile wxDEV.7z
        sz x wxDEV.7z -o${{ env.WX_ROOT }} # create lib directory
        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxMSW-3.2.2_vc14x_x64_ReleaseDLL.7z -OutFile wxDLL.7z
        sz x wxDLL.7z -o${{ env.WX_ROOT }} # add some libraries in lib directory
        
    - name : Create GUI sample program
      run : |
        cmake -B${{env.BUILD_DIR}} -DwxWidgets_ROOT=${{ env.WX_ROOT }} -DGLUT_ROOT=${{ env.GLUT_ROOT }}\freeglut
        cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}}
        $EXE_PATH = Get-ChildItem -Path "${{env.BUILD_DIR}}/${{env.BUILD_TYPE}}/hello" -File
        echo "MY_EXE=$EXE_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Result message
      run: echo "Built ${{ env.MY_EXE }}"

    - uses: actions/upload-artifact@v3
      with:
        name: windows-executable
        path: ${{ env.MY_EXE }}
        
  publish:
    needs: build
    # Only ubuntu can upload via SCP
    runs-on: windows-executable
    
    steps:
    - uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CG_HOST }}
        username: ${{ secrets.CG_USR }}
        password: ${{ secrets.CG_PWD }}
        source: hello
        target: /var/www/html/wxgl/ubuntu/

