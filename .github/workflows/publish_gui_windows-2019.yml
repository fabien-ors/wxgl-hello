name: publish_gui_windows-2019

on:
  #push:
  #  branches: [ main ]
  # Permit manual trigger
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Manual'
        required: false
        default: ''

env:
  BUILD_TYPE: Release
  BUILD_DIR : build
  COMPILE_VERSION : '"Visual Studio 16 2019"' #Because cmake -G needs " "
  WX_VERSION : 3.2.2.1
  GLUT_VERSION : 2.8.1-1
  WX_ROOT : ${{github.workspace}}/wxWidgets-3.2.2.1 # Name of the folder in wx sources archive
  GLUT_ROOT : ${{github.workspace}}/freeglut        # Name of the first folder in freeglut archive
  
jobs:
  build:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v3
   
    # DO NOT Download freeglut 3.0.0 MSVC Package. It is buggy for glutWireCube, glutSolid* !!!
    # Keep freeglut 2.8.1
    - name: Install Freeglut dependency
      run: |
        Invoke-WebRequest https://www.transmissionzero.co.uk/files/software/development/GLUT/older/freeglut-MSVC-${{env.GLUT_VERSION}}.mp.zip -OutFile freeglut.zip
        Expand-Archive freeglut.zip -DestinationPath ${{env.GLUT_ROOT}} # create freeglut directory

    # Binaries are here: https://www.wxwidgets.org/downloads/
#    - name: Install wxWidgets dependency
#      run: |
#        set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
#        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxWidgets-3.2.2.1-headers.7z -OutFile wxHeaders.7z
#        sz x wxHeaders.7z -o${{env.WX_ROOT}} # create include directory
#        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxMSW-3.2.2_vc14x_x64_Dev.7z -OutFile wxDEV.7z
#        sz x wxDEV.7z -o${{env.WX_ROOT}} # create lib directory
#        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.2.1/wxMSW-3.2.2_vc14x_x64_ReleaseDLL.7z -OutFile wxDLL.7z
#        sz x wxDLL.7z -y -o${{env.WX_ROOT}} # add some libraries in lib directory

    # Sources are here: https://www.wxwidgets.org/downloads/
    - name: Extract wxWidgets sources
      run: |
        set-alias sz "$env:ProgramFiles\7-Zip\7z.exe"
        Invoke-WebRequest https://github.com/wxWidgets/wxWidgets/releases/download/v${{env.WX_VERSION}}/wxWidgets-${{env.WX_VERSION}}.tar.bz2 -OutFile wx.bz2
        sz x -y wx.bz2 # Unzip
        sz x -y wx -o${{github.workspace}} # Untar
        ls ${{env.WX_ROOT}}

    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Compile wxWidgets sources (using Visual Studio shell)
      run : |
        cd ${{env.WX_ROOT}}\build\msw
        set _CL_=/MT
        msbuild -m:4 -t:build -p:"Configuration=Release;Platform=x64" wx_vc17.sln
        
    - name : Create GUI sample program
      run : |
        cmake -B${{env.BUILD_DIR}} -DwxWidgets_ROOT=${{env.WX_ROOT}} -DGLUT_ROOT=${{env.GLUT_ROOT}}\freeglut
        cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}} --target package_gui
        $FILE_PATH = Get-ChildItem -Path "${{env.BUILD_DIR}}/${{env.BUILD_TYPE}}/hello*.zip" -File
        echo "MY_FILE=$FILE_PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

    - name: Result message
      run: echo "Built ${{env.MY_FILE}}"

    - uses: actions/upload-artifact@v3
      with:
        name: windows-archive
        path: ${{env.MY_FILE}}

  # TODO : Same steps as for linux
  publish:
    needs: build
    # Only ubuntu can upload via SCP
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/download-artifact@v3
      #Â For downloading several artifacts: https://github.com/actions/download-artifact/issues/103#issuecomment-1290368250
      with:
        path: download_artifacts
        
    - name: Retrieve the list of files (all artifacts)
      # For join_by function: https://stackoverflow.com/a/17841619/3952924
      run: |
        ls -ls download_artifacts/*/*
        flist=$(ls download_artifacts/*/*)
        function join_by { local IFS="$1"; shift; echo "$*"; }
        flist=$(join_by , $flist)
        echo "Artifacts retrieved: $flist"
        echo "FILE_LIST=$flist" >> "$GITHUB_ENV"
      shell: bash
      
    - uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.CG_HOST }}
        username: ${{ secrets.CG_USR }}
        password: ${{ secrets.CG_PWD }}
        source: ${{env.FILE_LIST}}
        target: /var/www/html/wxgl/
        strip_components: 2

